name: Build and Push Docker Image to ACR

on:
  push:
    branches:
      - test  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests targeting main branc


jobs:
  build:
    runs-on: windows-2019  # Use Windows-based runner to build Windows container images

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    
    - name: Set Docker to use Windows Containers
      run: |
        powershell -Command "& 'C:\Program Files\Docker\Docker\DockerCli.exe' -SwitchToWindowsContainers"
        docker info  # Verify Docker is using Windows Containers
          
    - name: Set up Docker
      uses: docker/setup-docker-action@v4
      
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.PACKAGE_NAME }}  # Reference the uploaded artifact name
        path: ./downloaded_artifact  # Specify where the artifact will be downloaded

    - name: Extract the downloaded artifact (if it's a zip file)
      run: |
        unzip ./downloaded_artifact/${{ env.PACKAGE_NAME }} -d ./downloaded_artifact/
        ls ./downloaded_artifact/  # Verify the contents
  
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: |
          {
            "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
            "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
            "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
            "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
            }

    - name: Log in to Azure Container Registry
      run: |
        echo ${{ secrets.AZURE_CLIENT_SECRET }} | docker login ${{ secrets.AZURE_REGISTRY_URL }} -u ${{ secrets.AZURE_CLIENT_ID }} --password-stdin

    # - name: Build Docker image
    #   run: |
    #       # Build the Docker image using the Dockerfile in the current directory
    #       docker build -f ./Dockerfile -t ${{ secrets.AZURE_REGISTRY_URL }}/app-service-web-dotnet-get-started:latest .  # Image tag
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.AZURE_REGISTRY_URL }}/my-app-image:latest -f Dockerfile ./downloaded_artifact

    - name: Push Docker image to ACR
      run: |
           docker push ${{ secrets.AZURE_REGISTRY_URL }}/my-app-image:latest
        
    - name: Logout from Docker
      run: docker logout ${{ secrets.AZURE_REGISTRY_URL }}
