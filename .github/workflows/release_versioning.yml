name: Generating release versions

on:
  workflow_call: 

jobs:
  release_versioning:
    name: Release Versioning
    runs-on: ubuntu-latest
    steps:
      - name: Check PR
        id: get_pr_number
        run: |
          curl -sL -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/commits/${{github.sha}}/pulls" | tee >(jq -r '.[0].number' >> pr_number) | jq -r '.'
          
          if [ -z "$(cat pr_number)" ] || [ "$(cat pr_number)" == "null" ]; then
            echo "This Pipeline should only  be triggered by a pull request. Direct commits to the main branch are not allowed."
            exit 1
          fi
          echo "PR_NUMBER=$(cat pr_number)" >> $GITHUB_ENV
          echo "Pull Request number: $(cat pr_number)"

      - name: PR Body
        id: get_pr_body
        run: |
          PR_BODY=$(curl -sL -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/commits/${{github.sha}}/pulls" | jq -r '.[0].body')
          echo "$PR_BODY" > pr_body.txt
          cat pr_body.txt

      - name: Upload pr body artifact
        uses: actions/upload-artifact@v4
        with: 
          name: pr_body.txt
          path: pr_body.txt 

      - name: Get Commit and Determine Bump
        run: |
          response=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ env.PR_NUMBER}}/commits)
  
            commit_msg=$(echo "$response" | jq -r '.[].commit.message')
            
            cleaned_commit_msg=$(echo -e "$commit_msg" | tr -d '\r' | tr -d '*' | tr -d '\n')
            echo "$cleaned_commit_msg"
            bump="patch"
            if echo "$cleaned_commit_msg" | grep -q 'BREAKING CHANGE'; then
              bump="major"
            elif echo "$cleaned_commit_msg" | grep -q 'feat:'; then
              bump="minor"
            elif echo "$cleaned_commit_msg" | grep -q 'fix:'; then
              bump="patch"
            fi
            echo "BUMP=$bump" >> $GITHUB_ENV
            echo "Version bump: $bump"
            echo "$bump" > bump.txt

      - name: Upload bump artifact
        if: success() && env.BUMP !=''
        uses: actions/upload-artifact@v4
        with: 
          name: bump.txt
          path: bump.txt 
